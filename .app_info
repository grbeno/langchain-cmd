---
## Links
https://python.org/downloads/
https://python.langchain.com/v0.2/docs/introduction/
https://smith.langchain.com/
https://huggingface.co/
https://platform.openai.com/api-keys
https://python.langchain.com/v0.2/docs/integrations/llms/ollama/

## Tried models, looks good
python chat.py --m '<model>'

'gpt-4o-mini'  # default
'gpt-4o-2024-08-06'
'gpt-4o'
'gpt-4'
'gpt-4-turbo'
'gpt-3.5-turbo'
'llama3.1'  # ollama

## Planned models
'claude-3-5-sonnet-20240620'
'meta-llama/Meta-Llama-3.1-8B-Instruct'
'mistralai/Mistral-Nemo-Instruct-2407'

## Not yet work well
'meta-llama/Meta-Llama-3-8B-Instruct'

## Role
python chat.py --r '<role>'

'short and concise'  # default
'correct english'
'correct german'
'translate to english' #  / german / spanish / french / hungarian

## Providers
'openai'
'huggingface'
'ollama'

## .env

OPENAI_API_KEY
HUGGINGFACE_API_KEY

## langchain/langsmith

LANGCHAIN_API_KEY

## Use

## Setup
Select directory (cd) and create .env file
python -m venv .venv
.venv/Scripts/activate  # Windows
source .venv/bin/activate  # Linux
pip install -r requirements.txt

## Run
python chat.py
python chat.py --m '<model>'

## Open a conversation file
cd conversation
cat <anyfile.txt>

## Exit
add empty row

## Close venv
deactivate
